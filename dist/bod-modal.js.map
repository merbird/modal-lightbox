{"version":3,"sources":["../src/js/bod-modal.js"],"names":["$","BodModal","modal","$window","window","$document","document","$modal","$image","find","$expand","slideCount","activeSlide","displayTitle","attr","timer","slideInterval","undefined","parseInt","autoplay","openModal","bind","closeModal","prevSlide","nextSlide","imageTitle","displaySlide","navLink","debounceresize","resize","triggerSlide","on","evt","preventDefault","stopPropagation","filename","target","hasClass","constructor","extractFile","src","html","buildModalHtml","append","setTimeout","$curTitle","removeClass","css","clearTimeout","that","each","imageAlt","imageHref","parent","curFilename","title","i","newSlide","$curImage","hPadBorder","outerHeight","height","wPadBorder","outerWidth","width","topOffset","position","top","leftOffset","left","addClass","off","remove","path","pathParts","split","length","bodModals","push","jQuery"],"mappings":"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","file":"bod-modal.js","sourcesContent":["// Immediately executing function passing in JQuery so not to conflict\r\n// with other libs that use $\r\n\r\n(function($) {\r\n   \"use strict\";\r\n\r\n   class BodModal {\r\n\r\n      constructor(modal) {\r\n         this.$window = $(window);\r\n         this.$document = $(document);\r\n         this.$modal = $(modal);\r\n         this.$image = this.$modal.find('img');\r\n         this.$expand = this.$modal.find('.bod-expand-icon');\r\n         this.slideCount = 0;\r\n         this.activeSlide = 0;\r\n         this.displayTitle = this.$modal.attr('data-title');\r\n         this.timer = '';\r\n\r\n\r\n         // data-interval contains slide auto play interval in seconds i.e. time between slides\r\n         // 0 = no autoplay, undefined value defaults to 5 seconds  \r\n         this.slideInterval = $(modal).attr(\"data-interval\");\r\n         this.slideInterval == undefined ? this.slideInterval = 5000 : this.slideInterval = parseInt(this.slideInterval) * 1000;\r\n         this.autoplay = '';\r\n\r\n         this.openModal = this.openModal.bind(this);\r\n         this.closeModal = this.closeModal.bind(this);\r\n         this.prevSlide = this.prevSlide.bind(this);\r\n         this.nextSlide = this.nextSlide.bind(this);\r\n         this.imageTitle = this.imageTitle.bind(this);\r\n         this.displaySlide = this.displaySlide.bind(this);\r\n         this.navLink = this.navLink.bind(this);\r\n         this.debounceresize = this.debounceresize.bind(this);\r\n         this.resize = this.resize.bind(this);\r\n         this.triggerSlide = this.triggerSlide.bind(this);\r\n\r\n         // click on one of the modal images \r\n         this.$image.on('click touchstart', this.openModal);\r\n         this.$expand.on('click touchstart', this.openModal);\r\n\r\n      }\r\n\r\n\r\n      // Inserts modal html in document and displays first slide\r\n      openModal(evt) {\r\n         evt.preventDefault();\r\n         evt.stopPropagation();\r\n\r\n         let filename = '';\r\n         if ($(evt.target).hasClass('bod-expand-icon')) {\r\n            filename = this.constructor.extractFile($(evt.target).find('img').attr('src'));\r\n         } else {\r\n            // get filename of img that user click on to trigger modal\r\n            filename = this.constructor.extractFile(evt.target.src);\r\n         }\r\n\r\n         let html = this.buildModalHtml(filename);\r\n\r\n         this.$document.find('body').append(html);\r\n\r\n         // handle image title\r\n\r\n         if (this.displayTitle) {\r\n            // need to wait for html append to finish rendering\r\n            setTimeout(() => {\r\n               this.imageTitle(true);\r\n               this.$window.on('resize', this.debounceresize);\r\n            }, 500);\r\n         }\r\n\r\n         // event handler to close modal \r\n         $('.bodOpenModal,.bodCloseIcon').on('click touchstart', this.closeModal);\r\n\r\n         // next and previous slide events\r\n         $('.bodOpenModal img, .bodNextSlide').on('click touchstart', this.nextSlide);\r\n         $('.bodPrevSlide').on('click touchstart', this.prevSlide);\r\n\r\n         // slide nav link events \r\n         $('.bodNavLink').on('click touchstart', this.navLink);\r\n\r\n         // initiate autoplay\r\n         if (this.slideInterval > 0) {\r\n            this.autoplay = setTimeout(this.triggerSlide, this.slideInterval);\r\n         }\r\n      }\r\n\r\n      // use recursive setTimeout so create loop of slides\r\n      // better than setInterval because its more precise, does not\r\n      // start timeout until adter nextSlide completes. \r\n\r\n      triggerSlide() {\r\n         this.nextSlide();\r\n         this.autoplay = setTimeout(this.triggerSlide, this.slideInterval);\r\n      }\r\n\r\n\r\n      // Make sure we don't refresh title position until end of resize\r\n      debounceresize() {\r\n\r\n         // Make title invisible if timer not set. It looks cleaner that way\r\n         // and then we stop resizing we will display it again. We also \r\n         // move title to top left so that width is not impacted by resize \r\n         if (this.$curTitle && !this.timer) {\r\n            this.$curTitle.removeClass('bodShowTitle');\r\n            this.$curTitle.css({ \"top\": `0`, \"left\": `0` });\r\n         }\r\n\r\n         // debounce : don't keep calling resize box method, only call if not resized for 0.25s\r\n         clearTimeout(this.timer);\r\n         this.timer = setTimeout(this.resize, 250);\r\n\r\n      }\r\n\r\n\r\n      // Called when screen stopped resizing and we can display the title\r\n      // in its correct location\r\n      resize() {\r\n         this.timer = '';\r\n         // on resize we have to recalc and display the image title position\r\n         this.imageTitle(false);\r\n\r\n      }\r\n\r\n      // Construct the html that displays the modal slideshow\r\n      // filename - string - the filename of the active slide\r\n      // return - string - html to display modal\r\n      buildModalHtml(filename) {\r\n         this.slideCount = 0;\r\n         this.activeSlide = 0;\r\n\r\n         let html = \"\";\r\n         html += \"<div class='bodOpenModal'>\";\r\n         html += \"<div class='bodCloseIcon'>X</div>\";\r\n         html += \"<div class='bodModalContent'>\";\r\n\r\n         // output slides \r\n\r\n         let that = this;\r\n         this.$modal.find('img').each(function() {\r\n            that.slideCount++;\r\n            let imageAlt = $(this).attr(\"alt\");\r\n            let imageHref = $(this).parent().attr('href');\r\n\r\n            let curFilename = that.constructor.extractFile(imageHref);\r\n            if (curFilename === filename) {\r\n               html += \"<div class='bodModal bodActiveSlide'>\";\r\n               that.activeSlide = that.slideCount;\r\n            } else {\r\n               html += \"<div class='bodModal'>\";\r\n            }\r\n\r\n            html += \"<img \"\r\n            html += \"src='\" + imageHref + \"' alt='\" + imageAlt + \"' >\";\r\n            // output title\r\n\r\n            if (that.displayTitle) {\r\n               let title = $(this).parent().attr('title');\r\n               if (title) {\r\n                  html += `<div class=\"bodTitle\">${title}</div>`;\r\n               }\r\n            }\r\n            html += \"</div>\";\r\n\r\n         });\r\n\r\n         // prev and next links\r\n\r\n         html += \"<div class='bodPrevSlide'></div>\";\r\n         html += \"<div class='bodNextSlide'></div>\";\r\n\r\n         html += \"</div>\";\r\n\r\n         // output title\r\n\r\n         if (that.displayTitle) {\r\n            let title = $(this).parent().attr('title');\r\n            if (title) {\r\n               html += `<div class=\"bodTitle\">${title}</div>`;\r\n            }\r\n         }\r\n\r\n         // Output the nav icons \r\n\r\n         html += `<div class=\"bodNavLinks\">`;\r\n         html += `<ul>`;\r\n\r\n         for (let i = 1; i <= this.slideCount; i++) {\r\n            if (i === this.activeSlide) {\r\n               html += `<li class=\"bodNavLink bodActiveSlide\" data-slide-no=\"${i}\"></li>`;\r\n            } else {\r\n               html += `<li class=\"bodNavLink\" data-slide-no=\"${i}\"></li>`;\r\n            }\r\n         }\r\n\r\n         html += `</ul>`;\r\n         html += `</div>`;\r\n\r\n         html += `</div>`;\r\n\r\n         return html;\r\n      }\r\n\r\n      // Extracts filename from full path\r\n      // path - string - file path e.g. https://test.com/index.html\r\n      // return - string - filename e.g. index.html\r\n      static extractFile(path) {\r\n         let pathParts = path.split(\"/\");\r\n         return pathParts[pathParts.length - 1];\r\n      }\r\n\r\n\r\n      // output the image\r\n      // newSlide - boolean - first time displaying a slide\r\n      imageTitle(newSlide = false) {\r\n\r\n         if (this.displayTitle) {\r\n\r\n            if (newSlide) {\r\n               this.$curImage = $('.bodActiveSlide img');\r\n               this.$curTitle = $('.bodActiveSlide .bodTitle');\r\n               $('.bodTitle').removeClass('bodShowTitle');\r\n            }\r\n\r\n            if (this.$curTitle) {\r\n\r\n               const hPadBorder = this.$curImage.outerHeight() - this.$curImage.height();\r\n               const wPadBorder = this.$curImage.outerWidth() - this.$curImage.width();\r\n\r\n               if (this.displayTitle == 'left') {\r\n\r\n                  const topOffset = this.$curImage.position().top + (this.$curImage.height() - this.$curTitle.outerHeight());\r\n                  const leftOffset = this.$curImage.position().left + wPadBorder;\r\n                  this.$curTitle.css({ \"top\": `${topOffset}px`, \"left\": `${leftOffset}px` });\r\n\r\n               } else if (this.displayTitle == 'right') {\r\n\r\n                  const topOffset = this.$curImage.position().top + (this.$curImage.height() - this.$curTitle.outerHeight());\r\n                  const leftOffset = this.$curImage.position().left + this.$curImage.width() - this.$curTitle.outerWidth();\r\n                  this.$curTitle.css({ \"top\": `${topOffset}px`, \"left\": `${leftOffset}px` });\r\n\r\n               } else {\r\n\r\n                  this.$curTitle.css({ \"top\": \"50%\", \"left\": \"50%\", \"transform\": \"translate(-50%,-50%)\" });\r\n\r\n               }\r\n               this.$curTitle.addClass('bodShowTitle');\r\n            }\r\n\r\n         }\r\n      }\r\n\r\n\r\n      // called when modal closed by user \r\n      closeModal() {\r\n\r\n         // remove any events \r\n         $('.bodOpenModel').off('click touchstart');\r\n         $('.bodOpenModal img, .bodNextSlide').off('click touchstart');\r\n         $('.bodPrevSlide').off('click touchstart');\r\n         $('.bodNavLink').off('click touchstart');\r\n         this.$window.off('resize', this.debounceresize);\r\n\r\n         // cancel autoplay\r\n         if (this.autoplay) clearTimeout(this.autoplay);\r\n\r\n         // finish cleanup by removing modal html code previously inserted\r\n         this.$document.find('.bodOpenModal').remove();\r\n      }\r\n\r\n\r\n      prevSlide(evt) {\r\n         --this.activeSlide < 1 ? this.activeSlide = this.slideCount : this.activeSlide;\r\n         this.displaySlide(this.activeSlide);\r\n         evt.preventDefault();\r\n         evt.stopPropagation();\r\n      }\r\n\r\n\r\n      nextSlide(evt) {\r\n         ++this.activeSlide > this.slideCount ? this.activeSlide = 1 : this.activeSlide;\r\n         this.displaySlide(this.activeSlide);\r\n         if (evt) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n         }\r\n      }\r\n\r\n\r\n      navLink(evt) {\r\n         this.activeSlide = parseInt($(evt.target).attr(\"data-slide-no\"));\r\n         this.displaySlide(this.activeSlide);\r\n         evt.stopPropagation();\r\n      }\r\n\r\n      // Display the next slide. Triggered by navlink, next prev button\r\n      // image click or autoplay.\r\n      // activeslide - number - slide to display\r\n      displaySlide(activeSlide) {\r\n\r\n         // hide the slide title and move to top right\r\n         if (this.$curTitle) {\r\n            this.$curTitle.removeClass('bodShowTitle');\r\n            this.$curTitle.css({ \"top\": `0`, \"left\": `0` });\r\n         }\r\n\r\n         // remove slide indicator from nav links\r\n         $('.bodNavLink').removeClass('bodActiveSlide');\r\n\r\n         // hide current slide\r\n         $('.bodModal').removeClass('bodActiveSlide');\r\n\r\n         // show new activeslide \r\n         $(`.bodModal:nth-of-type(${activeSlide})`).addClass('bodActiveSlide');\r\n\r\n         // highlight current slide on nav links\r\n         $(`.bodNavLink:nth-of-type(${activeSlide})`).addClass('bodActiveSlide');\r\n\r\n         // show title for new slide\r\n         if (this.displayTitle) {\r\n            this.imageTitle(true);\r\n         }\r\n      }\r\n\r\n   }\r\n\r\n\r\n   $(function() {\r\n      // loop round all the models on the page creating an instance\r\n      // for each one adding to an array\r\n\r\n      window.bodModals = [];\r\n      $('.bod-modal').each(function() {\r\n         bodModals.push(new BodModal(this));\r\n      });\r\n   });\r\n\r\n})(jQuery);"]}